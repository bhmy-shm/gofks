// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.0
// source: cascade.rpcFlag

package cascade

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SorterParam_Order int32

const (
	SorterParam_ASC  SorterParam_Order = 0 //升序
	SorterParam_DESC SorterParam_Order = 1 //降序
)

// Enum value maps for SorterParam_Order.
var (
	SorterParam_Order_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	SorterParam_Order_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x SorterParam_Order) Enum() *SorterParam_Order {
	p := new(SorterParam_Order)
	*p = x
	return p
}

func (x SorterParam_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SorterParam_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_cascade_proto_enumTypes[0].Descriptor()
}

func (SorterParam_Order) Type() protoreflect.EnumType {
	return &file_cascade_proto_enumTypes[0]
}

func (x SorterParam_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SorterParam_Order.Descriptor instead.
func (SorterParam_Order) EnumDescriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{2, 0}
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint64            `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Reason   string            `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message  string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Status) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Status) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PageParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`   //当前页
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` //查询数量
}

func (x *PageParam) Reset() {
	*x = PageParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageParam) ProtoMessage() {}

func (x *PageParam) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageParam.ProtoReflect.Descriptor instead.
func (*PageParam) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{1}
}

func (x *PageParam) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PageParam) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SorterParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string            `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`                                 //排序字段
	Order SorterParam_Order `protobuf:"varint,2,opt,name=order,proto3,enum=cascade.SorterParam_Order" json:"order,omitempty"` //排序方式
}

func (x *SorterParam) Reset() {
	*x = SorterParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SorterParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SorterParam) ProtoMessage() {}

func (x *SorterParam) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SorterParam.ProtoReflect.Descriptor instead.
func (*SorterParam) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{2}
}

func (x *SorterParam) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SorterParam) GetOrder() SorterParam_Order {
	if x != nil {
		return x.Order
	}
	return SorterParam_ASC
}

type CascadeLower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId      string `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	LowerGroupName string `protobuf:"bytes,2,opt,name=LowerGroupName,proto3" json:"LowerGroupName,omitempty"`
	LowerGid       string `protobuf:"bytes,3,opt,name=LowerGid,proto3" json:"LowerGid,omitempty"`
	LowerSn        string `protobuf:"bytes,4,opt,name=LowerSn,proto3" json:"LowerSn,omitempty"`
	LowerType      int64  `protobuf:"varint,5,opt,name=LowerType,proto3" json:"LowerType,omitempty"`
	Gid            string `protobuf:"bytes,6,opt,name=Gid,proto3" json:"Gid,omitempty"`
	ApiAddr        string `protobuf:"bytes,7,opt,name=ApiAddr,proto3" json:"ApiAddr,omitempty"`
	Name           string `protobuf:"bytes,8,opt,name=Name,proto3" json:"Name,omitempty"`
	SipAddr        string `protobuf:"bytes,9,opt,name=SipAddr,proto3" json:"SipAddr,omitempty"`
	AuthPwd        string `protobuf:"bytes,10,opt,name=AuthPwd,proto3" json:"AuthPwd,omitempty"`
	AuthUser       string `protobuf:"bytes,11,opt,name=AuthUser,proto3" json:"AuthUser,omitempty"`
	Webhook        string `protobuf:"bytes,12,opt,name=Webhook,proto3" json:"Webhook,omitempty"`
}

func (x *CascadeLower) Reset() {
	*x = CascadeLower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CascadeLower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CascadeLower) ProtoMessage() {}

func (x *CascadeLower) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CascadeLower.ProtoReflect.Descriptor instead.
func (*CascadeLower) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{3}
}

func (x *CascadeLower) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *CascadeLower) GetLowerGroupName() string {
	if x != nil {
		return x.LowerGroupName
	}
	return ""
}

func (x *CascadeLower) GetLowerGid() string {
	if x != nil {
		return x.LowerGid
	}
	return ""
}

func (x *CascadeLower) GetLowerSn() string {
	if x != nil {
		return x.LowerSn
	}
	return ""
}

func (x *CascadeLower) GetLowerType() int64 {
	if x != nil {
		return x.LowerType
	}
	return 0
}

func (x *CascadeLower) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *CascadeLower) GetApiAddr() string {
	if x != nil {
		return x.ApiAddr
	}
	return ""
}

func (x *CascadeLower) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CascadeLower) GetSipAddr() string {
	if x != nil {
		return x.SipAddr
	}
	return ""
}

func (x *CascadeLower) GetAuthPwd() string {
	if x != nil {
		return x.AuthPwd
	}
	return ""
}

func (x *CascadeLower) GetAuthUser() string {
	if x != nil {
		return x.AuthUser
	}
	return ""
}

func (x *CascadeLower) GetWebhook() string {
	if x != nil {
		return x.Webhook
	}
	return ""
}

type CascadeConnStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64 `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	ErrCode int64 `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
}

func (x *CascadeConnStatus) Reset() {
	*x = CascadeConnStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CascadeConnStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CascadeConnStatus) ProtoMessage() {}

func (x *CascadeConnStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CascadeConnStatus.ProtoReflect.Descriptor instead.
func (*CascadeConnStatus) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{4}
}

func (x *CascadeConnStatus) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CascadeConnStatus) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

type CascadeSuperior struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	LastHeartBeat *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=LastHeartBeat,proto3" json:"LastHeartBeat,omitempty"`
	Expire        int64                  `protobuf:"varint,3,opt,name=Expire,proto3" json:"Expire,omitempty"`
	Sn            string                 `protobuf:"bytes,4,opt,name=Sn,proto3" json:"Sn,omitempty"`
	SnList        string                 `protobuf:"bytes,5,opt,name=SnList,proto3" json:"SnList,omitempty"`
	RemoteIp      string                 `protobuf:"bytes,6,opt,name=RemoteIp,proto3" json:"RemoteIp,omitempty"`
	Webhook       string                 `protobuf:"bytes,7,opt,name=Webhook,proto3" json:"Webhook,omitempty"`
	CbToken       string                 `protobuf:"bytes,8,opt,name=CbToken,proto3" json:"CbToken,omitempty"`
	ConfCount     int64                  `protobuf:"varint,9,opt,name=ConfCount,proto3" json:"ConfCount,omitempty"`
	ConnStatus    *CascadeConnStatus     `protobuf:"bytes,10,opt,name=ConnStatus,proto3" json:"ConnStatus,omitempty"`
}

func (x *CascadeSuperior) Reset() {
	*x = CascadeSuperior{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CascadeSuperior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CascadeSuperior) ProtoMessage() {}

func (x *CascadeSuperior) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CascadeSuperior.ProtoReflect.Descriptor instead.
func (*CascadeSuperior) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{5}
}

func (x *CascadeSuperior) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CascadeSuperior) GetLastHeartBeat() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartBeat
	}
	return nil
}

func (x *CascadeSuperior) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *CascadeSuperior) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *CascadeSuperior) GetSnList() string {
	if x != nil {
		return x.SnList
	}
	return ""
}

func (x *CascadeSuperior) GetRemoteIp() string {
	if x != nil {
		return x.RemoteIp
	}
	return ""
}

func (x *CascadeSuperior) GetWebhook() string {
	if x != nil {
		return x.Webhook
	}
	return ""
}

func (x *CascadeSuperior) GetCbToken() string {
	if x != nil {
		return x.CbToken
	}
	return ""
}

func (x *CascadeSuperior) GetConfCount() int64 {
	if x != nil {
		return x.ConfCount
	}
	return 0
}

func (x *CascadeSuperior) GetConnStatus() *CascadeConnStatus {
	if x != nil {
		return x.ConnStatus
	}
	return nil
}

type ReqLowerCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeLowerCreate *CascadeLower `protobuf:"bytes,1,opt,name=CascadeLowerCreate,proto3" json:"CascadeLowerCreate,omitempty"`
}

func (x *ReqLowerCreate) Reset() {
	*x = ReqLowerCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLowerCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLowerCreate) ProtoMessage() {}

func (x *ReqLowerCreate) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLowerCreate.ProtoReflect.Descriptor instead.
func (*ReqLowerCreate) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{6}
}

func (x *ReqLowerCreate) GetCascadeLowerCreate() *CascadeLower {
	if x != nil {
		return x.CascadeLowerCreate
	}
	return nil
}

type RespLowerCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string  `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	RpcStatus *Status `protobuf:"bytes,2,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespLowerCreate) Reset() {
	*x = RespLowerCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespLowerCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespLowerCreate) ProtoMessage() {}

func (x *RespLowerCreate) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespLowerCreate.ProtoReflect.Descriptor instead.
func (*RespLowerCreate) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{7}
}

func (x *RespLowerCreate) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *RespLowerCreate) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqLowerSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnyKey      string `protobuf:"bytes,1,opt,name=AnyKey,proto3" json:"AnyKey,omitempty"`
	PageSize    int64  `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	PageNum     int64  `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	Gid         string `protobuf:"bytes,4,opt,name=Gid,proto3" json:"Gid,omitempty"`
	IgnoreChild bool   `protobuf:"varint,5,opt,name=IgnoreChild,proto3" json:"IgnoreChild,omitempty"`
}

func (x *ReqLowerSearch) Reset() {
	*x = ReqLowerSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLowerSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLowerSearch) ProtoMessage() {}

func (x *ReqLowerSearch) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLowerSearch.ProtoReflect.Descriptor instead.
func (*ReqLowerSearch) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{8}
}

func (x *ReqLowerSearch) GetAnyKey() string {
	if x != nil {
		return x.AnyKey
	}
	return ""
}

func (x *ReqLowerSearch) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ReqLowerSearch) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ReqLowerSearch) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ReqLowerSearch) GetIgnoreChild() bool {
	if x != nil {
		return x.IgnoreChild
	}
	return false
}

type RespLowerSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int64           `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	CascadeLowers []*CascadeLower `protobuf:"bytes,2,rep,name=CascadeLowers,proto3" json:"CascadeLowers,omitempty"`
	RpcStatus     *Status         `protobuf:"bytes,3,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespLowerSearch) Reset() {
	*x = RespLowerSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespLowerSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespLowerSearch) ProtoMessage() {}

func (x *RespLowerSearch) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespLowerSearch.ProtoReflect.Descriptor instead.
func (*RespLowerSearch) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{9}
}

func (x *RespLowerSearch) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RespLowerSearch) GetCascadeLowers() []*CascadeLower {
	if x != nil {
		return x.CascadeLowers
	}
	return nil
}

func (x *RespLowerSearch) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqLowerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeUpdate *CascadeLower `protobuf:"bytes,1,opt,name=CascadeUpdate,proto3" json:"CascadeUpdate,omitempty"`
}

func (x *ReqLowerUpdate) Reset() {
	*x = ReqLowerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLowerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLowerUpdate) ProtoMessage() {}

func (x *ReqLowerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLowerUpdate.ProtoReflect.Descriptor instead.
func (*ReqLowerUpdate) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{10}
}

func (x *ReqLowerUpdate) GetCascadeUpdate() *CascadeLower {
	if x != nil {
		return x.CascadeUpdate
	}
	return nil
}

type RespLowerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string  `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	RpcStatus *Status `protobuf:"bytes,2,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespLowerUpdate) Reset() {
	*x = RespLowerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespLowerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespLowerUpdate) ProtoMessage() {}

func (x *RespLowerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespLowerUpdate.ProtoReflect.Descriptor instead.
func (*RespLowerUpdate) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{11}
}

func (x *RespLowerUpdate) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *RespLowerUpdate) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqLowerDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	Sn        string `protobuf:"bytes,2,opt,name=Sn,proto3" json:"Sn,omitempty"`
}

func (x *ReqLowerDel) Reset() {
	*x = ReqLowerDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLowerDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLowerDel) ProtoMessage() {}

func (x *ReqLowerDel) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLowerDel.ProtoReflect.Descriptor instead.
func (*ReqLowerDel) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{12}
}

func (x *ReqLowerDel) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *ReqLowerDel) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

type RespLowerDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string  `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	RpcStatus *Status `protobuf:"bytes,2,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespLowerDel) Reset() {
	*x = RespLowerDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespLowerDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespLowerDel) ProtoMessage() {}

func (x *RespLowerDel) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespLowerDel.ProtoReflect.Descriptor instead.
func (*RespLowerDel) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{13}
}

func (x *RespLowerDel) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *RespLowerDel) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqLowerGetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
}

func (x *ReqLowerGetInfo) Reset() {
	*x = ReqLowerGetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLowerGetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLowerGetInfo) ProtoMessage() {}

func (x *ReqLowerGetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLowerGetInfo.ProtoReflect.Descriptor instead.
func (*ReqLowerGetInfo) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{14}
}

func (x *ReqLowerGetInfo) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

type RespLowerGetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeInfo *CascadeLower `protobuf:"bytes,1,opt,name=CascadeInfo,proto3" json:"CascadeInfo,omitempty"`
	RpcStatus   *Status       `protobuf:"bytes,2,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespLowerGetInfo) Reset() {
	*x = RespLowerGetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespLowerGetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespLowerGetInfo) ProtoMessage() {}

func (x *RespLowerGetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespLowerGetInfo.ProtoReflect.Descriptor instead.
func (*RespLowerGetInfo) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{15}
}

func (x *RespLowerGetInfo) GetCascadeInfo() *CascadeLower {
	if x != nil {
		return x.CascadeInfo
	}
	return nil
}

func (x *RespLowerGetInfo) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqSuperiorGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqSuperiorGet) Reset() {
	*x = ReqSuperiorGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSuperiorGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSuperiorGet) ProtoMessage() {}

func (x *ReqSuperiorGet) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSuperiorGet.ProtoReflect.Descriptor instead.
func (*ReqSuperiorGet) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{16}
}

type RespSuperiorGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Superior  *CascadeSuperior `protobuf:"bytes,1,opt,name=Superior,proto3" json:"Superior,omitempty"`
	RpcStatus *Status          `protobuf:"bytes,2,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespSuperiorGet) Reset() {
	*x = RespSuperiorGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespSuperiorGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSuperiorGet) ProtoMessage() {}

func (x *RespSuperiorGet) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSuperiorGet.ProtoReflect.Descriptor instead.
func (*RespSuperiorGet) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{17}
}

func (x *RespSuperiorGet) GetSuperior() *CascadeSuperior {
	if x != nil {
		return x.Superior
	}
	return nil
}

func (x *RespSuperiorGet) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqSuperiorSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqSuperiorSet) Reset() {
	*x = ReqSuperiorSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSuperiorSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSuperiorSet) ProtoMessage() {}

func (x *ReqSuperiorSet) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSuperiorSet.ProtoReflect.Descriptor instead.
func (*ReqSuperiorSet) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{18}
}

type RespSuperiorSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RespSuperiorSet) Reset() {
	*x = RespSuperiorSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespSuperiorSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSuperiorSet) ProtoMessage() {}

func (x *RespSuperiorSet) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSuperiorSet.ProtoReflect.Descriptor instead.
func (*RespSuperiorSet) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{19}
}

type ReqSuperiorDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn string `protobuf:"bytes,1,opt,name=Sn,proto3" json:"Sn,omitempty"`
}

func (x *ReqSuperiorDel) Reset() {
	*x = ReqSuperiorDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSuperiorDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSuperiorDel) ProtoMessage() {}

func (x *ReqSuperiorDel) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSuperiorDel.ProtoReflect.Descriptor instead.
func (*ReqSuperiorDel) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{20}
}

func (x *ReqSuperiorDel) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

type RespSuperiorDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcStatus *Status `protobuf:"bytes,1,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespSuperiorDel) Reset() {
	*x = RespSuperiorDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespSuperiorDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSuperiorDel) ProtoMessage() {}

func (x *RespSuperiorDel) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSuperiorDel.ProtoReflect.Descriptor instead.
func (*RespSuperiorDel) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{21}
}

func (x *RespSuperiorDel) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqSyncTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step     int64  `protobuf:"varint,1,opt,name=Step,proto3" json:"Step,omitempty"`
	Time     int64  `protobuf:"varint,2,opt,name=Time,proto3" json:"Time,omitempty"`
	Level    int64  `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`
	RemoteIp string `protobuf:"bytes,4,opt,name=RemoteIp,proto3" json:"RemoteIp,omitempty"`
	Sn       string `protobuf:"bytes,5,opt,name=Sn,proto3" json:"Sn,omitempty"`
}

func (x *ReqSyncTime) Reset() {
	*x = ReqSyncTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSyncTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSyncTime) ProtoMessage() {}

func (x *ReqSyncTime) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSyncTime.ProtoReflect.Descriptor instead.
func (*ReqSyncTime) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{22}
}

func (x *ReqSyncTime) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ReqSyncTime) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReqSyncTime) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ReqSyncTime) GetRemoteIp() string {
	if x != nil {
		return x.RemoteIp
	}
	return ""
}

func (x *ReqSyncTime) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

type RespSyncTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step      int64   `protobuf:"varint,1,opt,name=Step,proto3" json:"Step,omitempty"`
	Level     int64   `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
	RpcStatus *Status `protobuf:"bytes,3,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespSyncTime) Reset() {
	*x = RespSyncTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespSyncTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSyncTime) ProtoMessage() {}

func (x *RespSyncTime) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSyncTime.ProtoReflect.Descriptor instead.
func (*RespSyncTime) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{23}
}

func (x *RespSyncTime) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *RespSyncTime) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RespSyncTime) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqHeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Superior   *CascadeSuperior `protobuf:"bytes,1,opt,name=Superior,proto3" json:"Superior,omitempty"`
	LocalIP    string           `protobuf:"bytes,2,opt,name=LocalIP,proto3" json:"LocalIP,omitempty"`
	IsPublicIP bool             `protobuf:"varint,3,opt,name=IsPublicIP,proto3" json:"IsPublicIP,omitempty"`
}

func (x *ReqHeartBeat) Reset() {
	*x = ReqHeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqHeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHeartBeat) ProtoMessage() {}

func (x *ReqHeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHeartBeat.ProtoReflect.Descriptor instead.
func (*ReqHeartBeat) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{24}
}

func (x *ReqHeartBeat) GetSuperior() *CascadeSuperior {
	if x != nil {
		return x.Superior
	}
	return nil
}

func (x *ReqHeartBeat) GetLocalIP() string {
	if x != nil {
		return x.LocalIP
	}
	return ""
}

func (x *ReqHeartBeat) GetIsPublicIP() bool {
	if x != nil {
		return x.IsPublicIP
	}
	return false
}

type RespHeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeData *CascadeLower `protobuf:"bytes,1,opt,name=CascadeData,proto3" json:"CascadeData,omitempty"`
	RpcStatus   *Status       `protobuf:"bytes,2,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespHeartBeat) Reset() {
	*x = RespHeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespHeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespHeartBeat) ProtoMessage() {}

func (x *RespHeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespHeartBeat.ProtoReflect.Descriptor instead.
func (*RespHeartBeat) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{25}
}

func (x *RespHeartBeat) GetCascadeData() *CascadeLower {
	if x != nil {
		return x.CascadeData
	}
	return nil
}

func (x *RespHeartBeat) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type Invitee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitors []string `protobuf:"bytes,1,rep,name=Visitors,proto3" json:"Visitors,omitempty"`
	Members  []string `protobuf:"bytes,2,rep,name=Members,proto3" json:"Members,omitempty"`
	None     []string `protobuf:"bytes,3,rep,name=None,proto3" json:"None,omitempty"`
	ObFlag   int64    `protobuf:"varint,4,opt,name=ObFlag,proto3" json:"ObFlag,omitempty"`
}

func (x *Invitee) Reset() {
	*x = Invitee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invitee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invitee) ProtoMessage() {}

func (x *Invitee) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invitee.ProtoReflect.Descriptor instead.
func (*Invitee) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{26}
}

func (x *Invitee) GetVisitors() []string {
	if x != nil {
		return x.Visitors
	}
	return nil
}

func (x *Invitee) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Invitee) GetNone() []string {
	if x != nil {
		return x.None
	}
	return nil
}

func (x *Invitee) GetObFlag() int64 {
	if x != nil {
		return x.ObFlag
	}
	return 0
}

type TitleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgColor        string `protobuf:"bytes,1,opt,name=BgColor,proto3" json:"BgColor,omitempty"`
	BgTransparency string `protobuf:"bytes,2,opt,name=BgTransparency,proto3" json:"BgTransparency,omitempty"`
	Color          string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
	Enable         bool   `protobuf:"varint,4,opt,name=Enable,proto3" json:"Enable,omitempty"`
	Position       string `protobuf:"bytes,5,opt,name=Position,proto3" json:"Position,omitempty"`
	Size           string `protobuf:"bytes,6,opt,name=Size,proto3" json:"Size,omitempty"`
	Text           string `protobuf:"bytes,7,opt,name=Text,proto3" json:"Text,omitempty"`
}

func (x *TitleInfo) Reset() {
	*x = TitleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleInfo) ProtoMessage() {}

func (x *TitleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleInfo.ProtoReflect.Descriptor instead.
func (*TitleInfo) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{27}
}

func (x *TitleInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *TitleInfo) GetBgTransparency() string {
	if x != nil {
		return x.BgTransparency
	}
	return ""
}

func (x *TitleInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *TitleInfo) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *TitleInfo) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *TitleInfo) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *TitleInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type RoomData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid           string `protobuf:"bytes,1,opt,name=Cid,proto3" json:"Cid,omitempty"`
	Cuid          string `protobuf:"bytes,2,opt,name=Cuid,proto3" json:"Cuid,omitempty"`
	ParentCid     string `protobuf:"bytes,3,opt,name=ParentCid,proto3" json:"ParentCid,omitempty"`
	ParentCuid    string `protobuf:"bytes,4,opt,name=ParentCuid,proto3" json:"ParentCuid,omitempty"`
	BeginTime     int64  `protobuf:"varint,5,opt,name=BeginTime,proto3" json:"BeginTime,omitempty"`
	EndTime       int64  `protobuf:"varint,6,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Gid           string `protobuf:"bytes,7,opt,name=Gid,proto3" json:"Gid,omitempty"`
	Vid           string `protobuf:"bytes,8,opt,name=Vid,proto3" json:"Vid,omitempty"`
	Mode          int32  `protobuf:"varint,9,opt,name=Mode,proto3" json:"Mode,omitempty"`
	DeptGid       string `protobuf:"bytes,10,opt,name=Dept_gid,json=DeptGid,proto3" json:"Dept_gid,omitempty"`
	Name          string `protobuf:"bytes,11,opt,name=Name,proto3" json:"Name,omitempty"`
	ZoneId        string `protobuf:"bytes,12,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	Agenda        string `protobuf:"bytes,13,opt,name=Agenda,proto3" json:"Agenda,omitempty"`
	IsPoint2Point bool   `protobuf:"varint,14,opt,name=IsPoint2point,proto3" json:"IsPoint2point,omitempty"`
}

func (x *RoomData) Reset() {
	*x = RoomData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomData) ProtoMessage() {}

func (x *RoomData) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomData.ProtoReflect.Descriptor instead.
func (*RoomData) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{28}
}

func (x *RoomData) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *RoomData) GetCuid() string {
	if x != nil {
		return x.Cuid
	}
	return ""
}

func (x *RoomData) GetParentCid() string {
	if x != nil {
		return x.ParentCid
	}
	return ""
}

func (x *RoomData) GetParentCuid() string {
	if x != nil {
		return x.ParentCuid
	}
	return ""
}

func (x *RoomData) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *RoomData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RoomData) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *RoomData) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *RoomData) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *RoomData) GetDeptGid() string {
	if x != nil {
		return x.DeptGid
	}
	return ""
}

func (x *RoomData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomData) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *RoomData) GetAgenda() string {
	if x != nil {
		return x.Agenda
	}
	return ""
}

func (x *RoomData) GetIsPoint2Point() bool {
	if x != nil {
		return x.IsPoint2Point
	}
	return false
}

type MemberStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nid               string `protobuf:"bytes,1,opt,name=Nid,proto3" json:"Nid,omitempty"`
	Name              string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Id                string `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	Role              string `protobuf:"bytes,4,opt,name=Role,proto3" json:"Role,omitempty"`
	ConfState         int64  `protobuf:"varint,5,opt,name=ConfState,proto3" json:"ConfState,omitempty"`
	Status            string `protobuf:"bytes,6,opt,name=Status,proto3" json:"Status,omitempty"`
	Unifyrole         int64  `protobuf:"varint,7,opt,name=Unifyrole,proto3" json:"Unifyrole,omitempty"`
	Platform          string `protobuf:"bytes,8,opt,name=Platform,proto3" json:"Platform,omitempty"`
	Mic               int64  `protobuf:"varint,9,opt,name=Mic,proto3" json:"Mic,omitempty"`
	Micdevicestatus   int64  `protobuf:"varint,10,opt,name=Micdevicestatus,proto3" json:"Micdevicestatus,omitempty"`
	Micoper           int64  `protobuf:"varint,11,opt,name=Micoper,proto3" json:"Micoper,omitempty"`
	Nakeplatform      string `protobuf:"bytes,12,opt,name=Nakeplatform,proto3" json:"Nakeplatform,omitempty"`
	Manuallydial      bool   `protobuf:"varint,13,opt,name=Manuallydial,proto3" json:"Manuallydial,omitempty"`
	Camera            int64  `protobuf:"varint,14,opt,name=Camera,proto3" json:"Camera,omitempty"`
	Speaker           int64  `protobuf:"varint,15,opt,name=Speaker,proto3" json:"Speaker,omitempty"`
	Streamindex       int64  `protobuf:"varint,16,opt,name=Streamindex,proto3" json:"Streamindex,omitempty"`
	Lastdialheartbeat int64  `protobuf:"varint,17,opt,name=Lastdialheartbeat,proto3" json:"Lastdialheartbeat,omitempty"`
	Usermode          int64  `protobuf:"varint,18,opt,name=Usermode,proto3" json:"Usermode,omitempty"`
	Userlaststatus    int64  `protobuf:"varint,19,opt,name=Userlaststatus,proto3" json:"Userlaststatus,omitempty"`
	Proxylink         string `protobuf:"bytes,20,opt,name=Proxylink,proto3" json:"Proxylink,omitempty"`
	Faceability       int64  `protobuf:"varint,21,opt,name=Faceability,proto3" json:"Faceability,omitempty"`
	NickName          string `protobuf:"bytes,22,opt,name=NickName,proto3" json:"NickName,omitempty"`
}

func (x *MemberStatus) Reset() {
	*x = MemberStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStatus) ProtoMessage() {}

func (x *MemberStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStatus.ProtoReflect.Descriptor instead.
func (*MemberStatus) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{29}
}

func (x *MemberStatus) GetNid() string {
	if x != nil {
		return x.Nid
	}
	return ""
}

func (x *MemberStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MemberStatus) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *MemberStatus) GetConfState() int64 {
	if x != nil {
		return x.ConfState
	}
	return 0
}

func (x *MemberStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MemberStatus) GetUnifyrole() int64 {
	if x != nil {
		return x.Unifyrole
	}
	return 0
}

func (x *MemberStatus) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *MemberStatus) GetMic() int64 {
	if x != nil {
		return x.Mic
	}
	return 0
}

func (x *MemberStatus) GetMicdevicestatus() int64 {
	if x != nil {
		return x.Micdevicestatus
	}
	return 0
}

func (x *MemberStatus) GetMicoper() int64 {
	if x != nil {
		return x.Micoper
	}
	return 0
}

func (x *MemberStatus) GetNakeplatform() string {
	if x != nil {
		return x.Nakeplatform
	}
	return ""
}

func (x *MemberStatus) GetManuallydial() bool {
	if x != nil {
		return x.Manuallydial
	}
	return false
}

func (x *MemberStatus) GetCamera() int64 {
	if x != nil {
		return x.Camera
	}
	return 0
}

func (x *MemberStatus) GetSpeaker() int64 {
	if x != nil {
		return x.Speaker
	}
	return 0
}

func (x *MemberStatus) GetStreamindex() int64 {
	if x != nil {
		return x.Streamindex
	}
	return 0
}

func (x *MemberStatus) GetLastdialheartbeat() int64 {
	if x != nil {
		return x.Lastdialheartbeat
	}
	return 0
}

func (x *MemberStatus) GetUsermode() int64 {
	if x != nil {
		return x.Usermode
	}
	return 0
}

func (x *MemberStatus) GetUserlaststatus() int64 {
	if x != nil {
		return x.Userlaststatus
	}
	return 0
}

func (x *MemberStatus) GetProxylink() string {
	if x != nil {
		return x.Proxylink
	}
	return ""
}

func (x *MemberStatus) GetFaceability() int64 {
	if x != nil {
		return x.Faceability
	}
	return 0
}

func (x *MemberStatus) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type ReqCgwCallCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId          string          `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	CascadeType        int64           `protobuf:"varint,2,opt,name=CascadeType,proto3" json:"CascadeType,omitempty"`
	CascadeDemo        int64           `protobuf:"varint,3,opt,name=CascadeDemo,proto3" json:"CascadeDemo,omitempty"`
	ParentCascadeLevel int64           `protobuf:"varint,4,opt,name=ParentCascadeLevel,proto3" json:"ParentCascadeLevel,omitempty"`
	ApiAddr            string          `protobuf:"bytes,5,opt,name=ApiAddr,proto3" json:"ApiAddr,omitempty"`
	LowerInvitee       *Invitee        `protobuf:"bytes,6,opt,name=LowerInvitee,proto3" json:"LowerInvitee,omitempty"`
	CreateRoomData     *RoomData       `protobuf:"bytes,7,opt,name=CreateRoomData,proto3" json:"CreateRoomData,omitempty"`
	CascadeLowers      []*CascadeLower `protobuf:"bytes,8,rep,name=CascadeLowers,proto3" json:"CascadeLowers,omitempty"`
}

func (x *ReqCgwCallCreate) Reset() {
	*x = ReqCgwCallCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCgwCallCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCgwCallCreate) ProtoMessage() {}

func (x *ReqCgwCallCreate) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCgwCallCreate.ProtoReflect.Descriptor instead.
func (*ReqCgwCallCreate) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{30}
}

func (x *ReqCgwCallCreate) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *ReqCgwCallCreate) GetCascadeType() int64 {
	if x != nil {
		return x.CascadeType
	}
	return 0
}

func (x *ReqCgwCallCreate) GetCascadeDemo() int64 {
	if x != nil {
		return x.CascadeDemo
	}
	return 0
}

func (x *ReqCgwCallCreate) GetParentCascadeLevel() int64 {
	if x != nil {
		return x.ParentCascadeLevel
	}
	return 0
}

func (x *ReqCgwCallCreate) GetApiAddr() string {
	if x != nil {
		return x.ApiAddr
	}
	return ""
}

func (x *ReqCgwCallCreate) GetLowerInvitee() *Invitee {
	if x != nil {
		return x.LowerInvitee
	}
	return nil
}

func (x *ReqCgwCallCreate) GetCreateRoomData() *RoomData {
	if x != nil {
		return x.CreateRoomData
	}
	return nil
}

func (x *ReqCgwCallCreate) GetCascadeLowers() []*CascadeLower {
	if x != nil {
		return x.CascadeLowers
	}
	return nil
}

type RespCgwCallCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid           string          `protobuf:"bytes,1,opt,name=Cid,proto3" json:"Cid,omitempty"`
	Cuid          string          `protobuf:"bytes,2,opt,name=Cuid,proto3" json:"Cuid,omitempty"`
	BeginTime     int64           `protobuf:"varint,3,opt,name=BeginTime,proto3" json:"BeginTime,omitempty"`
	EndTime       int64           `protobuf:"varint,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Name          string          `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Mode          int32           `protobuf:"varint,6,opt,name=Mode,proto3" json:"Mode,omitempty"`
	MemberStatus  []*MemberStatus `protobuf:"bytes,7,rep,name=MemberStatus,proto3" json:"MemberStatus,omitempty"`
	CascadeLowers []*CascadeLower `protobuf:"bytes,8,rep,name=CascadeLowers,proto3" json:"CascadeLowers,omitempty"`
	RpcStatus     *Status         `protobuf:"bytes,9,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespCgwCallCreate) Reset() {
	*x = RespCgwCallCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCgwCallCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCgwCallCreate) ProtoMessage() {}

func (x *RespCgwCallCreate) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCgwCallCreate.ProtoReflect.Descriptor instead.
func (*RespCgwCallCreate) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{31}
}

func (x *RespCgwCallCreate) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *RespCgwCallCreate) GetCuid() string {
	if x != nil {
		return x.Cuid
	}
	return ""
}

func (x *RespCgwCallCreate) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *RespCgwCallCreate) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RespCgwCallCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RespCgwCallCreate) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *RespCgwCallCreate) GetMemberStatus() []*MemberStatus {
	if x != nil {
		return x.MemberStatus
	}
	return nil
}

func (x *RespCgwCallCreate) GetCascadeLowers() []*CascadeLower {
	if x != nil {
		return x.CascadeLowers
	}
	return nil
}

func (x *RespCgwCallCreate) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqCgwCallModify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	EndTime   int64  `protobuf:"varint,2,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	BeginTime int64  `protobuf:"varint,3,opt,name=BeginTime,proto3" json:"BeginTime,omitempty"`
	Nid       string `protobuf:"bytes,4,opt,name=Nid,proto3" json:"Nid,omitempty"`
	Cid       string `protobuf:"bytes,5,opt,name=Cid,proto3" json:"Cid,omitempty"`
	Name      string `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	Agenda    string `protobuf:"bytes,7,opt,name=Agenda,proto3" json:"Agenda,omitempty"`
	ZoneId    string `protobuf:"bytes,8,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	Mode      int32  `protobuf:"varint,9,opt,name=Mode,proto3" json:"Mode,omitempty"`
}

func (x *ReqCgwCallModify) Reset() {
	*x = ReqCgwCallModify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCgwCallModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCgwCallModify) ProtoMessage() {}

func (x *ReqCgwCallModify) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCgwCallModify.ProtoReflect.Descriptor instead.
func (*ReqCgwCallModify) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{32}
}

func (x *ReqCgwCallModify) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *ReqCgwCallModify) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReqCgwCallModify) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ReqCgwCallModify) GetNid() string {
	if x != nil {
		return x.Nid
	}
	return ""
}

func (x *ReqCgwCallModify) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ReqCgwCallModify) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqCgwCallModify) GetAgenda() string {
	if x != nil {
		return x.Agenda
	}
	return ""
}

func (x *ReqCgwCallModify) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ReqCgwCallModify) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type RespCgwCallModify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeLowers []*CascadeLower `protobuf:"bytes,1,rep,name=CascadeLowers,proto3" json:"CascadeLowers,omitempty"`
	RpcStatus     *Status         `protobuf:"bytes,2,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespCgwCallModify) Reset() {
	*x = RespCgwCallModify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCgwCallModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCgwCallModify) ProtoMessage() {}

func (x *RespCgwCallModify) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCgwCallModify.ProtoReflect.Descriptor instead.
func (*RespCgwCallModify) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{33}
}

func (x *RespCgwCallModify) GetCascadeLowers() []*CascadeLower {
	if x != nil {
		return x.CascadeLowers
	}
	return nil
}

func (x *RespCgwCallModify) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqCgwCallDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid          string `protobuf:"bytes,1,opt,name=Cid,proto3" json:"Cid,omitempty"`
	CascadeId    string `protobuf:"bytes,2,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	Force        int32  `protobuf:"varint,3,opt,name=Force,proto3" json:"Force,omitempty"`
	FromSuperior uint64 `protobuf:"varint,4,opt,name=FromSuperior,proto3" json:"FromSuperior,omitempty"`
}

func (x *ReqCgwCallDelete) Reset() {
	*x = ReqCgwCallDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCgwCallDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCgwCallDelete) ProtoMessage() {}

func (x *ReqCgwCallDelete) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCgwCallDelete.ProtoReflect.Descriptor instead.
func (*ReqCgwCallDelete) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{34}
}

func (x *ReqCgwCallDelete) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ReqCgwCallDelete) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *ReqCgwCallDelete) GetForce() int32 {
	if x != nil {
		return x.Force
	}
	return 0
}

func (x *ReqCgwCallDelete) GetFromSuperior() uint64 {
	if x != nil {
		return x.FromSuperior
	}
	return 0
}

type RespCgwCallDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeLowers []*CascadeLower `protobuf:"bytes,1,rep,name=CascadeLowers,proto3" json:"CascadeLowers,omitempty"`
	RpcStatus     *Status         `protobuf:"bytes,2,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespCgwCallDelete) Reset() {
	*x = RespCgwCallDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCgwCallDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCgwCallDelete) ProtoMessage() {}

func (x *RespCgwCallDelete) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCgwCallDelete.ProtoReflect.Descriptor instead.
func (*RespCgwCallDelete) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{35}
}

func (x *RespCgwCallDelete) GetCascadeLowers() []*CascadeLower {
	if x != nil {
		return x.CascadeLowers
	}
	return nil
}

func (x *RespCgwCallDelete) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqCgwCallGroupCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid       string `protobuf:"bytes,1,opt,name=Cid,proto3" json:"Cid,omitempty"`
	CascadeId string `protobuf:"bytes,2,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
}

func (x *ReqCgwCallGroupCall) Reset() {
	*x = ReqCgwCallGroupCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCgwCallGroupCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCgwCallGroupCall) ProtoMessage() {}

func (x *ReqCgwCallGroupCall) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCgwCallGroupCall.ProtoReflect.Descriptor instead.
func (*ReqCgwCallGroupCall) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{36}
}

func (x *ReqCgwCallGroupCall) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ReqCgwCallGroupCall) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

type RespCgwCallGroupCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string   `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	Called    []string `protobuf:"bytes,2,rep,name=Called,proto3" json:"Called,omitempty"`
	RpcStatus *Status  `protobuf:"bytes,3,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespCgwCallGroupCall) Reset() {
	*x = RespCgwCallGroupCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCgwCallGroupCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCgwCallGroupCall) ProtoMessage() {}

func (x *RespCgwCallGroupCall) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCgwCallGroupCall.ProtoReflect.Descriptor instead.
func (*RespCgwCallGroupCall) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{37}
}

func (x *RespCgwCallGroupCall) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *RespCgwCallGroupCall) GetCalled() []string {
	if x != nil {
		return x.Called
	}
	return nil
}

func (x *RespCgwCallGroupCall) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqCgwCallSetMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string     `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	Nid       string     `protobuf:"bytes,2,opt,name=Nid,proto3" json:"Nid,omitempty"`
	Cid       string     `protobuf:"bytes,3,opt,name=Cid,proto3" json:"Cid,omitempty"`
	ZoneId    string     `protobuf:"bytes,4,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	Invitees  []*Invitee `protobuf:"bytes,5,rep,name=invitees,proto3" json:"invitees,omitempty"`
}

func (x *ReqCgwCallSetMember) Reset() {
	*x = ReqCgwCallSetMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCgwCallSetMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCgwCallSetMember) ProtoMessage() {}

func (x *ReqCgwCallSetMember) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCgwCallSetMember.ProtoReflect.Descriptor instead.
func (*ReqCgwCallSetMember) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{38}
}

func (x *ReqCgwCallSetMember) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *ReqCgwCallSetMember) GetNid() string {
	if x != nil {
		return x.Nid
	}
	return ""
}

func (x *ReqCgwCallSetMember) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ReqCgwCallSetMember) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ReqCgwCallSetMember) GetInvitees() []*Invitee {
	if x != nil {
		return x.Invitees
	}
	return nil
}

type RespCgwCallSetMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId     string          `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	CascadeLowers []*CascadeLower `protobuf:"bytes,2,rep,name=CascadeLowers,proto3" json:"CascadeLowers,omitempty"`
	MemberStatus  []*MemberStatus `protobuf:"bytes,3,rep,name=memberStatus,proto3" json:"memberStatus,omitempty"`
	RpcStatus     *Status         `protobuf:"bytes,4,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespCgwCallSetMember) Reset() {
	*x = RespCgwCallSetMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCgwCallSetMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCgwCallSetMember) ProtoMessage() {}

func (x *RespCgwCallSetMember) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCgwCallSetMember.ProtoReflect.Descriptor instead.
func (*RespCgwCallSetMember) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{39}
}

func (x *RespCgwCallSetMember) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *RespCgwCallSetMember) GetCascadeLowers() []*CascadeLower {
	if x != nil {
		return x.CascadeLowers
	}
	return nil
}

func (x *RespCgwCallSetMember) GetMemberStatus() []*MemberStatus {
	if x != nil {
		return x.MemberStatus
	}
	return nil
}

func (x *RespCgwCallSetMember) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqCgwCallHangupUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string   `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	Nid       string   `protobuf:"bytes,2,opt,name=Nid,proto3" json:"Nid,omitempty"`
	Cid       string   `protobuf:"bytes,3,opt,name=Cid,proto3" json:"Cid,omitempty"`
	Members   []string `protobuf:"bytes,4,rep,name=Members,proto3" json:"Members,omitempty"`
}

func (x *ReqCgwCallHangupUser) Reset() {
	*x = ReqCgwCallHangupUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCgwCallHangupUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCgwCallHangupUser) ProtoMessage() {}

func (x *ReqCgwCallHangupUser) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCgwCallHangupUser.ProtoReflect.Descriptor instead.
func (*ReqCgwCallHangupUser) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{40}
}

func (x *ReqCgwCallHangupUser) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *ReqCgwCallHangupUser) GetNid() string {
	if x != nil {
		return x.Nid
	}
	return ""
}

func (x *ReqCgwCallHangupUser) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ReqCgwCallHangupUser) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type RespCgwCallHangupUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId string  `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	RpcStatus *Status `protobuf:"bytes,2,opt,name=RpcStatus,proto3" json:"RpcStatus,omitempty"`
}

func (x *RespCgwCallHangupUser) Reset() {
	*x = RespCgwCallHangupUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCgwCallHangupUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCgwCallHangupUser) ProtoMessage() {}

func (x *RespCgwCallHangupUser) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCgwCallHangupUser.ProtoReflect.Descriptor instead.
func (*RespCgwCallHangupUser) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{41}
}

func (x *RespCgwCallHangupUser) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *RespCgwCallHangupUser) GetRpcStatus() *Status {
	if x != nil {
		return x.RpcStatus
	}
	return nil
}

type ReqHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeId    string           `protobuf:"bytes,1,opt,name=CascadeId,proto3" json:"CascadeId,omitempty"`
	LocalIP      string           `protobuf:"bytes,2,opt,name=LocalIP,proto3" json:"LocalIP,omitempty"`
	IsPublicIP   bool             `protobuf:"varint,3,opt,name=IsPublicIP,proto3" json:"IsPublicIP,omitempty"`
	SuperiorData *CascadeSuperior `protobuf:"bytes,4,opt,name=SuperiorData,proto3" json:"SuperiorData,omitempty"`
}

func (x *ReqHeartbeat) Reset() {
	*x = ReqHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHeartbeat) ProtoMessage() {}

func (x *ReqHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHeartbeat.ProtoReflect.Descriptor instead.
func (*ReqHeartbeat) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{42}
}

func (x *ReqHeartbeat) GetCascadeId() string {
	if x != nil {
		return x.CascadeId
	}
	return ""
}

func (x *ReqHeartbeat) GetLocalIP() string {
	if x != nil {
		return x.LocalIP
	}
	return ""
}

func (x *ReqHeartbeat) GetIsPublicIP() bool {
	if x != nil {
		return x.IsPublicIP
	}
	return false
}

func (x *ReqHeartbeat) GetSuperiorData() *CascadeSuperior {
	if x != nil {
		return x.SuperiorData
	}
	return nil
}

type RespHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CascadeData *CascadeLower `protobuf:"bytes,1,opt,name=CascadeData,proto3" json:"CascadeData,omitempty"`
}

func (x *RespHeartbeat) Reset() {
	*x = RespHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cascade_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespHeartbeat) ProtoMessage() {}

func (x *RespHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_cascade_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespHeartbeat.ProtoReflect.Descriptor instead.
func (*RespHeartbeat) Descriptor() ([]byte, []int) {
	return file_cascade_proto_rawDescGZIP(), []int{43}
}

func (x *RespHeartbeat) GetCascadeData() *CascadeLower {
	if x != nil {
		return x.CascadeData
	}
	return nil
}

var File_cascade_proto protoreflect.FileDescriptor

var file_cascade_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x01, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x41, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x71, 0x0a, 0x0b, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x1a, 0x0a, 0x05,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x22, 0xd2, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x6f, 0x77, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x53, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f,
	0x77, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x47, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x75, 0x74, 0x68, 0x50, 0x77, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x77, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x22, 0x45, 0x0a,
	0x11, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0xd1, 0x02, 0x0a, 0x0f, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0d,
	0x4c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x4c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0a,
	0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x43, 0x6f,
	0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x57, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x12, 0x43, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x12, 0x43,
	0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x22, 0x5e, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6e, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6e, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x47, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x3b, 0x0a, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x0d,
	0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a,
	0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4d, 0x0a, 0x0e,
	0x52, 0x65, 0x71, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e,
	0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x43, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x5e, 0x0a, 0x0f, 0x52,
	0x65, 0x73, 0x70, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09,
	0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3b, 0x0a, 0x0b, 0x52,
	0x65, 0x71, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x53, 0x6e, 0x22, 0x5b, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70,
	0x4c, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x77, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x4c, 0x6f,
	0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0b, 0x43, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x0b, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x72, 0x47, 0x65, 0x74, 0x22, 0x76, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x52, 0x08, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x12, 0x2d, 0x0a,
	0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x10, 0x0a, 0x0e,
	0x52, 0x65, 0x71, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x22, 0x11,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x65,
	0x74, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72,
	0x44, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x53, 0x6e, 0x22, 0x40, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x77, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x53, 0x79, 0x6e, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x53, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x53, 0x6e, 0x22, 0x67,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x74,
	0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x52, 0x70,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7e, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x52, 0x08, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x49, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x50, 0x22, 0x77, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x43, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x52, 0x0b, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2d, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x6b, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x62, 0x46, 0x6c, 0x61, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x62, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xbf, 0x01,
	0x0a, 0x09, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x42,
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x67,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x42,
	0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x22,
	0xe3, 0x02, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x43, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x75,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x74, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x44, 0x65, 0x70, 0x74, 0x47, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x64,
	0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x12,
	0x24, 0x0a, 0x0d, 0x49, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x88, 0x05, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x66, 0x79, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x6e, 0x69, 0x66, 0x79,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4d,
	0x69, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x69, 0x63, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x4d, 0x69, 0x63,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x69, 0x63, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d,
	0x69, 0x63, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x61, 0x6b, 0x65, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4e, 0x61,
	0x6b, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x64, 0x69, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x64, 0x69, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x64, 0x69, 0x61, 0x6c, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x4c,
	0x61, 0x73, 0x74, 0x64, 0x69, 0x61, 0x6c, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x55, 0x73, 0x65, 0x72, 0x6c, 0x61, 0x73, 0x74, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x6c, 0x61, 0x73, 0x74, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x61, 0x63, 0x65, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x46, 0x61, 0x63, 0x65, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xec, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x44, 0x65, 0x6d, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x43, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x34, 0x0a, 0x0c, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x52, 0x0c, 0x4c, 0x6f, 0x77, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x12, 0x39, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77,
	0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72,
	0x52, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x22,
	0xc0, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77,
	0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c,
	0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x4e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4e, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x5a,
	0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x7f, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x70, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x3b,
	0x0a, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e,
	0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x43, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x52,
	0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7c, 0x0a, 0x10, 0x52, 0x65,
	0x71, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70,
	0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x3b, 0x0a,
	0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x43,
	0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x43, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x52, 0x70,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09,
	0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x52, 0x65, 0x71,
	0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64,
	0x22, 0x7b, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x2d,
	0x0a, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9d, 0x01,
	0x0a, 0x13, 0x52, 0x65, 0x71, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x73, 0x22, 0xdb, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77,
	0x65, 0x72, 0x52, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x12, 0x39, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x09,
	0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x72, 0x0a, 0x14, 0x52,
	0x65, 0x71, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22,
	0x64, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x61,
	0x6e, 0x67, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x52, 0x70, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x50, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x50, 0x12, 0x1e,
	0x0a, 0x0a, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x50, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x50, 0x12, 0x3c,
	0x0a, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x43,
	0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x52, 0x0c,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x0d,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x37, 0x0a,
	0x0b, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x0b, 0x43, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x32, 0x88, 0x08, 0x0a, 0x0d, 0x43, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x4c, 0x6f, 0x77, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x1a, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x4c, 0x6f,
	0x77, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x1a, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x40, 0x0a, 0x0b,
	0x4c, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x1a, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37,
	0x0a, 0x08, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x63, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x1a, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x12, 0x43, 0x0a, 0x0c, 0x4c, 0x6f, 0x77, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x19, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x4c, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0b,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x61,
	0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x72, 0x47, 0x65, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x12, 0x40,
	0x0a, 0x0b, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x12, 0x17, 0x2e,
	0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x65, 0x74,
	0x12, 0x37, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x63,
	0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69,
	0x6d, 0x65, 0x1a, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x1a, 0x16, 0x2e,
	0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x1a,
	0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x43, 0x67, 0x77,
	0x43, 0x61, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x61,
	0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x1a, 0x1a, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12,
	0x43, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e,
	0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x67, 0x77, 0x43, 0x61,
	0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x1a, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x61, 0x6c, 0x6c, 0x1a, 0x1d, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61,
	0x6c, 0x6c, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x1a, 0x1d, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x4f, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x43, 0x67, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cascade_proto_rawDescOnce sync.Once
	file_cascade_proto_rawDescData = file_cascade_proto_rawDesc
)

func file_cascade_proto_rawDescGZIP() []byte {
	file_cascade_proto_rawDescOnce.Do(func() {
		file_cascade_proto_rawDescData = protoimpl.X.CompressGZIP(file_cascade_proto_rawDescData)
	})
	return file_cascade_proto_rawDescData
}

var file_cascade_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cascade_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_cascade_proto_goTypes = []interface{}{
	(SorterParam_Order)(0),        // 0: cascade.SorterParam.Order
	(*Status)(nil),                // 1: cascade.Status
	(*PageParam)(nil),             // 2: cascade.PageParam
	(*SorterParam)(nil),           // 3: cascade.SorterParam
	(*CascadeLower)(nil),          // 4: cascade.CascadeLower
	(*CascadeConnStatus)(nil),     // 5: cascade.CascadeConnStatus
	(*CascadeSuperior)(nil),       // 6: cascade.CascadeSuperior
	(*ReqLowerCreate)(nil),        // 7: cascade.ReqLowerCreate
	(*RespLowerCreate)(nil),       // 8: cascade.RespLowerCreate
	(*ReqLowerSearch)(nil),        // 9: cascade.ReqLowerSearch
	(*RespLowerSearch)(nil),       // 10: cascade.RespLowerSearch
	(*ReqLowerUpdate)(nil),        // 11: cascade.ReqLowerUpdate
	(*RespLowerUpdate)(nil),       // 12: cascade.RespLowerUpdate
	(*ReqLowerDel)(nil),           // 13: cascade.ReqLowerDel
	(*RespLowerDel)(nil),          // 14: cascade.RespLowerDel
	(*ReqLowerGetInfo)(nil),       // 15: cascade.ReqLowerGetInfo
	(*RespLowerGetInfo)(nil),      // 16: cascade.RespLowerGetInfo
	(*ReqSuperiorGet)(nil),        // 17: cascade.ReqSuperiorGet
	(*RespSuperiorGet)(nil),       // 18: cascade.RespSuperiorGet
	(*ReqSuperiorSet)(nil),        // 19: cascade.ReqSuperiorSet
	(*RespSuperiorSet)(nil),       // 20: cascade.RespSuperiorSet
	(*ReqSuperiorDel)(nil),        // 21: cascade.ReqSuperiorDel
	(*RespSuperiorDel)(nil),       // 22: cascade.RespSuperiorDel
	(*ReqSyncTime)(nil),           // 23: cascade.ReqSyncTime
	(*RespSyncTime)(nil),          // 24: cascade.RespSyncTime
	(*ReqHeartBeat)(nil),          // 25: cascade.ReqHeartBeat
	(*RespHeartBeat)(nil),         // 26: cascade.RespHeartBeat
	(*Invitee)(nil),               // 27: cascade.Invitee
	(*TitleInfo)(nil),             // 28: cascade.TitleInfo
	(*RoomData)(nil),              // 29: cascade.RoomData
	(*MemberStatus)(nil),          // 30: cascade.MemberStatus
	(*ReqCgwCallCreate)(nil),      // 31: cascade.ReqCgwCallCreate
	(*RespCgwCallCreate)(nil),     // 32: cascade.RespCgwCallCreate
	(*ReqCgwCallModify)(nil),      // 33: cascade.ReqCgwCallModify
	(*RespCgwCallModify)(nil),     // 34: cascade.RespCgwCallModify
	(*ReqCgwCallDelete)(nil),      // 35: cascade.ReqCgwCallDelete
	(*RespCgwCallDelete)(nil),     // 36: cascade.RespCgwCallDelete
	(*ReqCgwCallGroupCall)(nil),   // 37: cascade.ReqCgwCallGroupCall
	(*RespCgwCallGroupCall)(nil),  // 38: cascade.RespCgwCallGroupCall
	(*ReqCgwCallSetMember)(nil),   // 39: cascade.ReqCgwCallSetMember
	(*RespCgwCallSetMember)(nil),  // 40: cascade.RespCgwCallSetMember
	(*ReqCgwCallHangupUser)(nil),  // 41: cascade.ReqCgwCallHangupUser
	(*RespCgwCallHangupUser)(nil), // 42: cascade.RespCgwCallHangupUser
	(*ReqHeartbeat)(nil),          // 43: cascade.ReqHeartbeat
	(*RespHeartbeat)(nil),         // 44: cascade.RespHeartbeat
	nil,                           // 45: cascade.Status.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 46: google.protobuf.Timestamp
}
var file_cascade_proto_depIdxs = []int32{
	45, // 0: cascade.Status.metadata:type_name -> cascade.Status.MetadataEntry
	0,  // 1: cascade.SorterParam.order:type_name -> cascade.SorterParam.Order
	46, // 2: cascade.CascadeSuperior.LastHeartBeat:type_name -> google.protobuf.Timestamp
	5,  // 3: cascade.CascadeSuperior.ConnStatus:type_name -> cascade.CascadeConnStatus
	4,  // 4: cascade.ReqLowerCreate.CascadeLowerCreate:type_name -> cascade.CascadeLower
	1,  // 5: cascade.RespLowerCreate.RpcStatus:type_name -> cascade.Status
	4,  // 6: cascade.RespLowerSearch.CascadeLowers:type_name -> cascade.CascadeLower
	1,  // 7: cascade.RespLowerSearch.RpcStatus:type_name -> cascade.Status
	4,  // 8: cascade.ReqLowerUpdate.CascadeUpdate:type_name -> cascade.CascadeLower
	1,  // 9: cascade.RespLowerUpdate.RpcStatus:type_name -> cascade.Status
	1,  // 10: cascade.RespLowerDel.RpcStatus:type_name -> cascade.Status
	4,  // 11: cascade.RespLowerGetInfo.CascadeInfo:type_name -> cascade.CascadeLower
	1,  // 12: cascade.RespLowerGetInfo.RpcStatus:type_name -> cascade.Status
	6,  // 13: cascade.RespSuperiorGet.Superior:type_name -> cascade.CascadeSuperior
	1,  // 14: cascade.RespSuperiorGet.RpcStatus:type_name -> cascade.Status
	1,  // 15: cascade.RespSuperiorDel.RpcStatus:type_name -> cascade.Status
	1,  // 16: cascade.RespSyncTime.RpcStatus:type_name -> cascade.Status
	6,  // 17: cascade.ReqHeartBeat.Superior:type_name -> cascade.CascadeSuperior
	4,  // 18: cascade.RespHeartBeat.CascadeData:type_name -> cascade.CascadeLower
	1,  // 19: cascade.RespHeartBeat.RpcStatus:type_name -> cascade.Status
	27, // 20: cascade.ReqCgwCallCreate.LowerInvitee:type_name -> cascade.Invitee
	29, // 21: cascade.ReqCgwCallCreate.CreateRoomData:type_name -> cascade.RoomData
	4,  // 22: cascade.ReqCgwCallCreate.CascadeLowers:type_name -> cascade.CascadeLower
	30, // 23: cascade.RespCgwCallCreate.MemberStatus:type_name -> cascade.MemberStatus
	4,  // 24: cascade.RespCgwCallCreate.CascadeLowers:type_name -> cascade.CascadeLower
	1,  // 25: cascade.RespCgwCallCreate.RpcStatus:type_name -> cascade.Status
	4,  // 26: cascade.RespCgwCallModify.CascadeLowers:type_name -> cascade.CascadeLower
	1,  // 27: cascade.RespCgwCallModify.RpcStatus:type_name -> cascade.Status
	4,  // 28: cascade.RespCgwCallDelete.CascadeLowers:type_name -> cascade.CascadeLower
	1,  // 29: cascade.RespCgwCallDelete.RpcStatus:type_name -> cascade.Status
	1,  // 30: cascade.RespCgwCallGroupCall.RpcStatus:type_name -> cascade.Status
	27, // 31: cascade.ReqCgwCallSetMember.invitees:type_name -> cascade.Invitee
	4,  // 32: cascade.RespCgwCallSetMember.CascadeLowers:type_name -> cascade.CascadeLower
	30, // 33: cascade.RespCgwCallSetMember.memberStatus:type_name -> cascade.MemberStatus
	1,  // 34: cascade.RespCgwCallSetMember.RpcStatus:type_name -> cascade.Status
	1,  // 35: cascade.RespCgwCallHangupUser.RpcStatus:type_name -> cascade.Status
	6,  // 36: cascade.ReqHeartbeat.SuperiorData:type_name -> cascade.CascadeSuperior
	4,  // 37: cascade.RespHeartbeat.CascadeData:type_name -> cascade.CascadeLower
	7,  // 38: cascade.CascadeClient.LowerCreate:input_type -> cascade.ReqLowerCreate
	9,  // 39: cascade.CascadeClient.LowerSearch:input_type -> cascade.ReqLowerSearch
	11, // 40: cascade.CascadeClient.LowerUpdate:input_type -> cascade.ReqLowerUpdate
	13, // 41: cascade.CascadeClient.LowerDel:input_type -> cascade.ReqLowerDel
	15, // 42: cascade.CascadeClient.LowerGetInfo:input_type -> cascade.ReqLowerGetInfo
	17, // 43: cascade.CascadeClient.SuperiorGet:input_type -> cascade.ReqSuperiorGet
	19, // 44: cascade.CascadeClient.SuperiorSet:input_type -> cascade.ReqSuperiorSet
	23, // 45: cascade.CascadeClient.SyncTime:input_type -> cascade.ReqSyncTime
	25, // 46: cascade.CascadeClient.HeartBeat:input_type -> cascade.ReqHeartBeat
	31, // 47: cascade.CascadeClient.CallCreate:input_type -> cascade.ReqCgwCallCreate
	33, // 48: cascade.CascadeClient.CallModify:input_type -> cascade.ReqCgwCallModify
	35, // 49: cascade.CascadeClient.CallDelete:input_type -> cascade.ReqCgwCallDelete
	37, // 50: cascade.CascadeClient.CallGroupCall:input_type -> cascade.ReqCgwCallGroupCall
	39, // 51: cascade.CascadeClient.CallSetMember:input_type -> cascade.ReqCgwCallSetMember
	41, // 52: cascade.CascadeClient.CallHangupUser:input_type -> cascade.ReqCgwCallHangupUser
	8,  // 53: cascade.CascadeClient.LowerCreate:output_type -> cascade.RespLowerCreate
	10, // 54: cascade.CascadeClient.LowerSearch:output_type -> cascade.RespLowerSearch
	12, // 55: cascade.CascadeClient.LowerUpdate:output_type -> cascade.RespLowerUpdate
	14, // 56: cascade.CascadeClient.LowerDel:output_type -> cascade.RespLowerDel
	16, // 57: cascade.CascadeClient.LowerGetInfo:output_type -> cascade.RespLowerGetInfo
	18, // 58: cascade.CascadeClient.SuperiorGet:output_type -> cascade.RespSuperiorGet
	20, // 59: cascade.CascadeClient.SuperiorSet:output_type -> cascade.RespSuperiorSet
	24, // 60: cascade.CascadeClient.SyncTime:output_type -> cascade.RespSyncTime
	26, // 61: cascade.CascadeClient.HeartBeat:output_type -> cascade.RespHeartBeat
	32, // 62: cascade.CascadeClient.CallCreate:output_type -> cascade.RespCgwCallCreate
	34, // 63: cascade.CascadeClient.CallModify:output_type -> cascade.RespCgwCallModify
	36, // 64: cascade.CascadeClient.CallDelete:output_type -> cascade.RespCgwCallDelete
	38, // 65: cascade.CascadeClient.CallGroupCall:output_type -> cascade.RespCgwCallGroupCall
	40, // 66: cascade.CascadeClient.CallSetMember:output_type -> cascade.RespCgwCallSetMember
	42, // 67: cascade.CascadeClient.CallHangupUser:output_type -> cascade.RespCgwCallHangupUser
	53, // [53:68] is the sub-list for method output_type
	38, // [38:53] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_cascade_proto_init() }
func file_cascade_proto_init() {
	if File_cascade_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cascade_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SorterParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CascadeLower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CascadeConnStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CascadeSuperior); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLowerCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespLowerCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLowerSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespLowerSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLowerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespLowerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLowerDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespLowerDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLowerGetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespLowerGetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSuperiorGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespSuperiorGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSuperiorSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespSuperiorSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSuperiorDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespSuperiorDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSyncTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespSyncTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqHeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespHeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invitee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TitleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCgwCallCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCgwCallCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCgwCallModify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCgwCallModify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCgwCallDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCgwCallDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCgwCallGroupCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCgwCallGroupCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCgwCallSetMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCgwCallSetMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCgwCallHangupUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCgwCallHangupUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cascade_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cascade_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cascade_proto_goTypes,
		DependencyIndexes: file_cascade_proto_depIdxs,
		EnumInfos:         file_cascade_proto_enumTypes,
		MessageInfos:      file_cascade_proto_msgTypes,
	}.Build()
	File_cascade_proto = out.File
	file_cascade_proto_rawDesc = nil
	file_cascade_proto_goTypes = nil
	file_cascade_proto_depIdxs = nil
}
